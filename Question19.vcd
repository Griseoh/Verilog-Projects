$date
	Wed Sep 27 20:29:05 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module AdderSub4bit_tb $end
$var wire 4 ! Y [3:0] $end
$var wire 1 " Ovrflw $end
$var reg 4 # A [3:0] $end
$var reg 4 $ B [3:0] $end
$var reg 1 % M $end
$scope module uut $end
$var wire 4 & A [3:0] $end
$var wire 4 ' B [3:0] $end
$var wire 1 % M $end
$var wire 1 " Ovrflw $end
$var wire 4 ( Y [3:0] $end
$var wire 1 ) Cinterm3 $end
$var wire 1 * Cinterm2 $end
$var wire 1 + Cinterm1 $end
$var wire 1 , Cinterm0 $end
$var wire 4 - BorInvB [3:0] $end
$scope module C0 $end
$var wire 4 . A [3:0] $end
$var wire 1 % Ctrl $end
$var wire 4 / Y [3:0] $end
$upscope $end
$scope module F0 $end
$var wire 1 0 a $end
$var wire 1 1 b $end
$var wire 1 % cin $end
$var wire 1 , cout $end
$var wire 1 2 s $end
$upscope $end
$scope module F1 $end
$var wire 1 3 a $end
$var wire 1 4 b $end
$var wire 1 , cin $end
$var wire 1 + cout $end
$var wire 1 5 s $end
$upscope $end
$scope module F2 $end
$var wire 1 6 a $end
$var wire 1 7 b $end
$var wire 1 + cin $end
$var wire 1 * cout $end
$var wire 1 8 s $end
$upscope $end
$scope module F3 $end
$var wire 1 9 a $end
$var wire 1 : b $end
$var wire 1 * cin $end
$var wire 1 ) cout $end
$var wire 1 ; s $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
bx /
bx .
bx -
x,
x+
x*
x)
bx (
bx '
bx &
x%
bx $
bx #
x"
bx !
$end
#2
10
03
06
19
b110 $
b110 '
b110 .
b1001 #
b1001 &
#4
0"
0)
1;
0*
18
0+
15
0,
b1111 !
b1111 (
12
01
14
17
0:
b110 -
b110 /
0%
#6
1"
1)
08
0;
15
11
04
07
1:
1,
b1001 -
b1001 /
b11 !
b11 (
12
1%
#10
